[
    {
        "id": 1,
        "titulo": "Criptografia de César",
        "texto": "O projeto consistiu em criar uma aplicação web que permitisse ao usuário cifrar e decifrar uma mensagem de texto, usando a cifra de César. \n\n A interface que desenvolvi permite ao usuário inserir o texto original, selecionar o deslocamento desejado, visualizar o texto original e o que foi criptografado/descriptografado. \n\nCom objetivo de melhorar a experiência do usuário, adicionei as funcionalidades de limpar e copiar o texto. \n\n Para implementar a cifra de César, foi utilizado o método `charcode`, que retorna o código ASCII de um determinado caractere. A partir disso, foi possível deslocar o caractere de acordo com o deslocamento especificado pelo usuário, mantendo a distância relativa entre as letras do alfabeto. \n\n A lógica do projeto foi implementada inteiramente em JavaScript vanilla, sem o uso de bibliotecas ou frameworks. Foi necessário também realizar vários testes para garantir que a aplicação funcionasse corretamente em diferentes cenários, por esse motivo implementei uma função que converte o texto digitado pelo usuário em `UpperCase`. \n\nOs testes unitários cobriram 100% dos `statements`, `functions`, `lines` e `branches`. "
    },
    {
        "id": 2,
        "titulo": "Data Lovers",
        "texto": ">Neste projeto, construí em parceria com Ariane Vieira e Patricia Adania uma página web que permite ao usuário visualizar um conjunto (set) de dados que se adeque às suas necessidades. O público alvo são jogadores de League Of Legends (LOL). \n\n Temos uma página web que permite visualizar dados, filtrá-los, ordená-los e fazer algum cálculo agregado. Por cálculo agregado nos referimos aos diversos cálculos que podem ser feitos com os dados para mostrar a informação mais relevante para os usuários (médias, valores máximos e mínimos, etc). \n\n Tudo isso utilizando HTML semântico, CSS responsivo e JavaScript puro.  \n\n \n\n ### Considerações Técnicas \n\n \n\n A lógica do projeto foi implementada somente em JavaScript (ES6), HTML e CSS. Estas funções são [puras], assim, através de funções puras e independentes do DOM que foram usadas a partir do arquivo src/main.js, ao carregar a página e a cada vez que o usuário interage com a interface (cliques, seleções, filtros, ordenação, etc).\n\n \n\n ### A implementação contém:\n\n \n\n - Exibição dos dados em interface em cards;\n\n - Permite ao usuário interagir com a interface para obter as informações que necessita, através de filtros de buscas por nome ou tipo do campeão, bem como por classificação dos poderes.\n\n - É responsiva, ou seja, deve ser visualizada sem problemas a partir de diversos tamanhos de tela: celulares, tablets, notebooks, etc.\n\n"
    },
    {
        "id": 3,
        "titulo": "Dog Tips",
        "texto": "> Projeto desenvolvido em parceria com Ana Paula Januário e Paola Oliveira, onde aprimoramos habilidades em autenticação com Firebase Auth, persistência de dados com Firestore e fomos apresentadas ao conceito de SPA (Single Page Application). \n\n\n ### Sobre o projeto. \n\n\n A Dog Tips é uma rede social específica para tutores de cães, com o objetivo de conectar pessoas que compartilham do amor por esses animais de estimação. Além disso, a plataforma visa ajudar os usuários a encontrar informações úteis sobre cuidados com seus cães e recomendações de lugares que possam ser úteis para o bem-estar de seus animais. \n\n Através da Dog Tips, os usuários podem criar perfis, compartilhar informações, curtir e descurtir publicações, e ter acesso a conteúdos exclusivos relacionados ao universo canino. Com isso, esperamos criar uma comunidade forte e colaborativa que possa auxiliar os tutores de cães em suas necessidades e proporcionar um ambiente seguro e acolhedor para seus usuários. \n\n  \n\n  ### Nossos usuários. \n\n  \n\n Para o desenvolvimento de produtos e interfaces digitais voltados para a experiência do usuário (UX), é fundamental adotar uma abordagem centrada no usuário, que leve em consideração as necessidades e desejos dos donos de cachorros. Nesse sentido, a criação de personas é uma estratégia eficaz para compreendermos melhor quem são nossos usuários. \n\n Por meio da criação de personas, podemos estabelecer perfis fictícios que representem os diferentes tipos de donos de cachorros que utilizam nossos produtos. Esses perfis incluem informações relevantes, como idade, gênero, profissão, estilo de vida, preferências, objetivos e desafios relacionados à criação de seus animais de estimação. \n\n Com base nesses perfis, conseguimos guiar as tomadas de decisão do projeto, desenvolvendo soluções que atendam às necessidades específicas de cada tipo de usuário. Isso nos ajuda a criar produtos e interfaces digitais mais intuitivos, funcionais e eficientes, que proporcionem uma experiência satisfatória aos tutores de cãe que os utilizam."
    },
    {
        "id": 4,
        "titulo": "Card Validation",
        "texto": "> Este projeto extra foi desenvolvido individualmente, com duração de 1 sprint, com o objetivo de fixar o conhecimento, as ferramentas e metodologias utilizada nos projetos anteriores. \n\n #### Resumo do projeto\n\n\n\n Desenvolvi uma Web simulando a compra de produtos da loja Aventuras Literárias, para finalizar a compra o usuário precisa informar os dados do cartão de crédito.\n\n A interface permite ao usuário validar o número de um cartão de crédito, sendo necessário preencher também os campos de nome, data de vencimento e CVV do cartão.\n\n O usuário preenche os campos do formulário, que simultaneamente são exibidos em um elemento ao lado que simula um cartão de crédito e inclusive exibe a franquia do cartão (com base nos dois primeiros dígitos). A função ***maskiFy*** oculta todos os dígitos de um cartão, exceto os quatro últimos. Enquanto a função ***isValid*** realiza a validação do cartão após o usuário clicar no botão concluir compra."
    },
    {
        "id": 5,
        "titulo": "MD Links",
        "texto": "> Primeira experiência programando em backend e utilizando bibliotecas. \n\n\n\n  #### Sobre o projeto\n\n\n\n Este projeto é composto por uma ferramenta de linha de comando (CLI), a qual permite que o usuário execute a biblioteca diretamente do terminal, através de um módulo do Node.js que analisa os arquivos em formato Markdown.\n\n A CLI revela os links encontrados, indicando a rota do arquivo onde foi encontrado o link, a URL encontrada e o texto que aparece dentro de um link. Também pode validar os links e fornecer estatísticas sobre os mesmos.\n\n\n\n #### Funcionalidades\n\n\n\nAs funcionalidades atualmente disponíveis são:\n\n - Listagem de links: exibe os links encontrados nos arquivos Markdown, mostrando a rota do arquivo onde foi encontrado o link, a URL encontrada e o texto que aparece dentro do link. \n\n - Validação de links: verifica se os links encontrados nos arquivos Markdown estão funcionando corretamente, retornando o código de status HTTP da URL correspondente. Também são exibidas mensagens sobre a validação, fail em caso de falha ou ok em caso de sucesso.\n\n - Estatísticas de links: exibe o número total de links encontrados, total de links únicos e o número de links que estão funcionando corretamente.\n\n\n\n #### Instruções de Uso\n\n\n\n Para instalar o módulo, execute o seguinte comando: ***npm install md-links-lab*** \n\n - Para validar os links utilize a a flag ***--validate***\n\n - Obter estatísticas dos links, com total de links encontrados e links únicos utilizar a flag ***--stats*** \n\n - Caso deseje obter a estatística de links quebrados, utilizar as duas flags juntas ***--validate*** ***--stats*** \n\n\n\n #### Testes Unitários \n\n\n\n Este projeto conta com uma suíte completa de testes unitários para garantir a qualidade do código e a confiabilidade da ferramenta de linha de comando. Os testes foram escritos utilizando a biblioteca de testes Jest. A maioria dos testes unitários cobriram 100% dos statements, functions lines e branches."
    }
]